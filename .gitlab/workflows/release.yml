prepare_job:
  stage: release
  image: "mcr.microsoft.com/dotnet/sdk:8.0-noble"
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - 'apt update'
    - 'apt -y install make zip glab'
    - 'dotnet tool install --global docfx'
    - 'make rel-ci'
    - 'make doc'
    - './tools/docgen-pack.sh'
    - 'echo "SUBJECT=$(cat CHANGES.TITLE)" >> variables.env'
    - 'export BODY="$(cat CHANGES)"$''\n\n''"$(sha256sum tools/*.zip | sed -e ''s/^/- /g'')"'
    - 'release-cli --server-url https://gitlab.com --job-token=$CI_JOB_TOKEN --project-id $CI_PROJECT_ID create --name "$SUBJECT" --description "$BODY" --tag-name "$CI_COMMIT_TAG"'
    - 'NUGET_APIKEY=$NUGET_APIKEY ./tools/push.sh'
    - |
      curl -L \
        -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer $GH_TOKEN" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        https://api.github.com/repos/Aptivi/Aptivestigate/releases \
        -d "{\"tag_name\":\"$CI_COMMIT_TAG\",\"target_commitish\":\"$CI_COMMIT_REF_NAME\",\"name\":\"$SUBJECT\",\"body\":\"$BODY\",\"draft\":false,\"prerelease\":false,\"generate_release_notes\":false}"
    - 'response=$(curl -sH "$AUTH" $GH_TAGS)'
    - 'eval $(echo "$response" | grep -m 1 "id.:" | grep -w id | tr : = | tr -cd ''[[:alnum:]]='')'
    - '[ "$id" ] || { echo "Release id for tag $tag not found"; echo "$response\n" >&2; exit 1; }'
    - 'files=(tools/*.zip)'
    - |
      for file in $files; do
        filename=$(basename "$file")
        curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GH_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Content-Type: application/octet-stream" \
          "https://uploads.github.com/repos/Aptivi/Aptivestigate/releases/$id/assets?name=$filename" \
          --data-binary @"$file"
      done
